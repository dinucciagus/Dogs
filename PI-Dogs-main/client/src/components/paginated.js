import React from "react";
import "./styles/Paginated.css";

export default function Paginated({
  currentPage,
  setCurrentPage,
  max,
  inputPage,
  setInputPage,
}) {
  const nextPage = () => {
    setInputPage(inputPage + 1);
    setCurrentPage(currentPage + 1);
  };
  const backPage = () => {
    setInputPage(inputPage - 1);
    setCurrentPage(currentPage - 1);
  };

  const onKeyDown = (e) => {
    if (e.keyCode === 13) {
      setCurrentPage(parseInt(e.target.value));
      if (
        parseInt(e.target.value < 1 || parseInt(e.target.value) > max) ||
        isNaN(parseInt(e.target.value))
      ) {
        setCurrentPage(1);
        setInputPage(1);
      } else {
        setCurrentPage(parseInt(e.target.value));
      }
    }
  };

  const onChange = (e) => {
    setInputPage(e.target.value);
  };

  // const pageNumber = [];
  // for (let i = 1; i <= max; i++) {
  //   pageNumber.push(i);
  // }

  // const onClick = (e) => {
  //   setCurrentPage(e.target.value);
  // };

  return (
    <div className="container">
      <button
        onClick={backPage}
        disabled={currentPage === 1 || currentPage < 1}
        className="button"
      >
        <svg
          id="Layer_1"
          data-name="Layer 1"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 600 600"
          width="40"
          height="40"
        >
          <path d="M474.45,497.32c-28.52-1.55-52.75-11.91-71.49-32.95-22.2-24.92-47.36-46.3-74.12-66-12.9-9.5-25.63-19.26-35.44-32.1C264.19,328.07,256.74,275.86,298,231c14.43-15.68,31.46-28.21,48.51-40.76,5.5-4,10.95-8.16,16.53-12.09,13.76-9.66,26.13-20.73,35.11-35.09,17.22-27.53,61.93-42.86,89.43-37.66,37.62,7.13,60.78,30,72,65.52a109.69,109.69,0,0,1,.67,65.43c-11.34,38.25-10.52,76.9-2.82,115.68,3.23,16.29,7.87,32.28,7.55,49.22-.73,39.59-28.38,79.74-63.78,90.8C492.6,494.77,483.4,495.62,474.45,497.32Zm-98.71-163.5c-.12,25.66,25.51,44.09,50.95,36.64,10.08-3,19.48-7.71,26.47-15.39,13.07-14.36,25.43-29.38,37.73-44.42,4.78-5.84,4.1-12.66-.15-18.58-8.52-11.88-16.89-23.94-26.33-35.07s-20.74-20.76-34.53-26.57c-16.87-7.11-34.7-1.82-47.14,13.59-10.9,13.5-11.25,28.75-.17,44,5.69,7.86,6.06,14.93.54,22.84A38.79,38.79,0,0,0,375.74,333.82Z" />
          <path d="M157.71,284.68c-31.12-2.34-61.84-3.49-90.93-14.63a87.8,87.8,0,0,1-13.51-6.39c-16-9.52-21.2-23-15.7-40.87,6.14-20,18.3-36.18,33.41-50.13,25-23,53.91-38.71,88.13-42,36.79-3.58,68,8,89.56,39.13,20.53,29.71,15.4,63.35-11.13,87.83-16.81,15.52-36.79,22.88-59,25.36C171.44,283.74,164.28,284.15,157.71,284.68Z" />
          <path d="M172.15,469.62C110.4,468,66.92,438.1,39.56,383.49a52.23,52.23,0,0,1-3.77-11.84C32.92,359.16,37,349,46.89,341.16,57.55,332.67,70.38,328.92,83.1,325c18.3-5.67,37.35-6.13,56.17-8.36,20.9-2.48,41.31-.14,61.2,5.61,30.49,8.82,50.33,29,58.65,59.75,3.93,14.5,1,28.51-6.4,41.37C237.87,449.25,211.67,470.94,172.15,469.62Z" />
          <path d="M312.63,146.47c-33.2-1.6-61.22-14.39-85.21-36.49a234.87,234.87,0,0,1-20.2-21.4C196,75.3,196,61.11,207.35,47.89c12.84-15,30-22.36,49-25.5a141.23,141.23,0,0,1,71.27,6.77c32.95,11.77,50.92,45.84,42.94,79.9-4.15,17.71-16.53,27.71-33.06,32.77C329.5,144.29,320.94,145,312.63,146.47Z" />
          <path d="M314.41,455c13.06-.68,24.95,3.37,36.25,9.37,16.09,8.56,20.79,23.2,21.1,40.17.6,33.06-16.49,58.14-48.1,67.88-27.17,8.37-54.89,10.16-82.56,1.52a68.11,68.11,0,0,1-32.58-21.26c-11.16-13.25-12-26.08-2.81-40.79,7-11.21,16.6-20,27.34-27.39,23.06-16,48.07-27,76.37-29.48C311.07,454.83,312.74,455,314.41,455Z" />
        </svg>
      </button>
      <input
        onChange={(e) => onChange(e)}
        onKeyDown={(e) => onKeyDown(e)}
        name="page"
        className="input"
        value={inputPage}
        autoComplete="off"
        type="text"
      />
      <p> of {max} </p>
      <button
        onClick={nextPage}
        disabled={currentPage === max || currentPage > max}
        className="button"
      >
        <svg
          id="Layer_1"
          data-name="Layer 1"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 600 600"
          width="40"
          height="40"
        >
          <path d="M125.46,102.79c28.53,1.54,52.76,11.9,71.5,32.94,22.2,24.93,47.36,46.3,74.11,66,12.91,9.5,25.64,19.27,35.45,32.1,29.21,38.21,36.66,90.41-4.63,135.26-14.43,15.67-31.47,28.21-48.51,40.75-5.5,4.05-10.95,8.17-16.54,12.09-13.75,9.66-26.12,20.73-35.11,35.1-17.21,27.53-61.92,42.86-89.42,37.65-37.63-7.12-60.78-30-72-65.52a109.58,109.58,0,0,1-.67-65.42C51,325.49,50.16,286.83,42.46,248.06c-3.23-16.29-7.87-32.29-7.55-49.22.73-39.59,28.38-79.74,63.78-90.8C107.32,105.34,116.52,104.49,125.46,102.79Zm98.71,163.49c.13-25.65-25.5-44.09-50.94-36.63-10.09,2.95-19.48,7.7-26.47,15.38-13.07,14.37-25.43,29.39-37.74,44.42-4.77,5.84-4.09,12.66.15,18.58,8.53,11.88,16.89,23.94,26.34,35.07s20.74,20.77,34.53,26.58c16.87,7.1,34.69,1.82,47.14-13.6,10.89-13.49,11.24-28.74.17-44.05-5.69-7.85-6.06-14.92-.54-22.84A38.69,38.69,0,0,0,224.17,266.28Z" />
          <path d="M442.21,315.42c31.12,2.35,61.84,3.49,90.93,14.64a88.19,88.19,0,0,1,13.51,6.38c16,9.53,21.2,23,15.7,40.87-6.14,20-18.3,36.19-33.41,50.14-25,23.05-53.91,38.7-88.13,42-36.8,3.58-68.06-8-89.57-39.13-20.52-29.71-15.39-63.35,11.13-87.83,16.82-15.52,36.79-22.88,59-25.36C428.48,316.36,435.64,316,442.21,315.42Z" />
          <path d="M427.76,130.48C489.51,132.13,533,162,560.36,216.62a52.81,52.81,0,0,1,3.77,11.83C567,241,562.91,251.08,553,259c-10.66,8.48-23.49,12.24-36.21,16.18-18.3,5.67-37.35,6.12-56.17,8.36-20.9,2.47-41.31.14-61.21-5.62-30.48-8.81-50.32-29-58.65-59.74-3.92-14.51-1-28.51,6.41-41.37C362.05,150.86,388.25,129.16,427.76,130.48Z" />
          <path d="M287.29,453.63c33.19,1.61,61.22,14.4,85.21,36.5a236.07,236.07,0,0,1,20.2,21.39c11.22,13.29,11.24,27.48-.13,40.7-12.84,14.94-30,22.35-49,25.5a141.24,141.24,0,0,1-71.27-6.78c-33-11.77-50.92-45.83-42.94-79.89,4.15-17.71,16.53-27.72,33.06-32.78C270.42,455.82,279,455.12,287.29,453.63Z" />
          <path d="M285.51,145.15c-13.06.68-25-3.37-36.25-9.38-16.1-8.55-20.79-23.19-21.1-40.17-.61-33,16.49-58.14,48.1-67.88,27.17-8.36,54.89-10.15,82.55-1.51A68.1,68.1,0,0,1,391.4,47.47c11.15,13.25,12,26.08,2.8,40.79-7,11.2-16.59,19.94-27.34,27.38-23.05,16-48.07,27-76.36,29.49C288.85,145.27,287.17,145.15,285.51,145.15Z" />
        </svg>
      </button>
    </div>

    // <div>
    //   <ul>
    //     {pageNumber.length
    //       ? pageNumber.map((p) => (
    //           <li value={p}>
    //             <button value={p} onClick={(e) => onClick(e)}>
    //               {p}
    //             </button>
    //           </li>
    //         ))
    //       : null}
    //   </ul>
    // </div>
  );
}
